class Html5Qrcode{static DEFAULT_WIDTH=300;static DEFAULT_WIDTH_OFFSET=2;static FILE_SCAN_MIN_HEIGHT=300;static SCAN_DEFAULT_FPS=2;static SCAN_DEFAULT_IDLE_TIMOUT=2e3;static MIN_QR_BOX_SIZE=50;static SHADED_LEFT=1;static SHADED_RIGHT=2;static SHADED_TOP=3;static SHADED_BOTTOM=4;static SHADED_REGION_CLASSNAME="qr-shaded-region";static VERBOSE=false;static BORDER_SHADER_DEFAULT_COLOR="#ffffff";static BORDER_SHADER_MATCH_COLOR="rgb(90, 193, 56)";constructor(elementId,verbose){if(!ZXing){throw"Use html5qrcode.min.js without edit, ZXing not found."}const hints=new Map;const formats=[ZXing.BarcodeFormat.QR_CODE,ZXing.BarcodeFormat.AZTEC,ZXing.BarcodeFormat.CODABAR,ZXing.BarcodeFormat.CODE_39,ZXing.BarcodeFormat.CODE_93,ZXing.BarcodeFormat.CODE_128,ZXing.BarcodeFormat.DATA_MATRIX,ZXing.BarcodeFormat.MAXICODE,ZXing.BarcodeFormat.ITF,ZXing.BarcodeFormat.EAN_13,ZXing.BarcodeFormat.EAN_8,ZXing.BarcodeFormat.PDF_417,ZXing.BarcodeFormat.RSS_14,ZXing.BarcodeFormat.RSS_EXPANDED,ZXing.BarcodeFormat.UPC_A,ZXing.BarcodeFormat.UPC_E,ZXing.BarcodeFormat.UPC_EAN_EXTENSION];hints.set(ZXing.DecodeHintType.POSSIBLE_FORMATS,formats);this.qrcode=new ZXing.MultiFormatReader(verbose);this.qrcode.setHints(hints);this._elementId=elementId;this._foreverScanTimeout=null;this._localMediaStream=null;this._shouldScan=true;this._idleTimout=0;this._url=window.URL||window.webkitURL||window.mozURL||window.msURL;this._userMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;this._isScanning=false;Html5Qrcode.VERBOSE=verbose===true}start(cameraIdOrConfig,configuration,qrCodeSuccessCallback,qrCodeErrorCallback){if(!cameraIdOrConfig){throw"cameraIdOrConfig is required"}if(!qrCodeSuccessCallback||typeof qrCodeSuccessCallback!="function"){throw"qrCodeSuccessCallback is required and should be a function."}if(!qrCodeErrorCallback){qrCodeErrorCallback=console.log}this._clearElement();const $this=this;const config=configuration?configuration:{};config.fps=config.fps?config.fps:Html5Qrcode.SCAN_DEFAULT_FPS;config.idleTimout=config.idleTimout?config.idleTimout:Html5Qrcode.SCAN_DEFAULT_IDLE_TIMOUT;let videoConstraintsAvailableAndValid=false;if(config.videoConstraints){if(!this._isMediaStreamConstraintsValid(config.videoConstraints)){Html5Qrcode._logError("'videoConstraints' is not valid 'MediaStreamConstraints, "+"it will be ignored.'",true)}else{videoConstraintsAvailableAndValid=true}}const videoConstraintsEnabled=videoConstraintsAvailableAndValid;const isShadedBoxEnabled=config.qrboxWidth!=undefined;const element=document.getElementById(this._elementId);const width=element.clientWidth?element.clientWidth:Html5Qrcode.DEFAULT_WIDTH;element.style.position="relative";this._shouldScan=true;this._element=element;if(isShadedBoxEnabled){const qrboxSize=config.qrboxWidth;if(qrboxSize<Html5Qrcode.MIN_QR_BOX_SIZE){throw"minimum size of 'config.qrboxWidth' is"+` ${Html5Qrcode.MIN_QR_BOX_SIZE}px.`}if(qrboxSize>width){throw"'config.qrbox' should not be greater than the "+"width of the HTML element."}}const setupUi=(width,height)=>{const qrboxWidth=config.qrboxWidth;const qrboxHeight=config.qrboxHeight?config.qrboxHeight:qrboxWidth;if(qrboxHeight>height){console.warn("[Html5Qrcode] config.qrboxsize is greater "+"than video height. Shading will be ignored")}const shouldShadingBeApplied=isShadedBoxEnabled&&qrboxWidth<=height;const defaultQrRegion={x:0,y:0,width:width,height:height};const qrRegion=shouldShadingBeApplied?this._getShadedRegionBounds(width,height,qrboxWidth,qrboxHeight):defaultQrRegion;const canvasElement=this._createCanvasElement(qrRegion.width,qrRegion.height);const context=canvasElement.getContext("2d");context.canvas.width=qrRegion.width;context.canvas.height=qrRegion.height;element.append(canvasElement);if(shouldShadingBeApplied){this._possiblyInsertShadingElement(element,width,height,qrboxWidth,qrboxHeight)}$this._qrRegion=qrRegion;$this._context=context;$this._canvasElement=canvasElement};const scanContext=()=>{try{const luminanceSource=new ZXing.HTMLCanvasElementLuminanceSource($this._canvasElement);const binaryBitmap=new ZXing.BinaryBitmap(new ZXing.HybridBinarizer(luminanceSource));let result=$this.qrcode.decode(binaryBitmap);qrCodeSuccessCallback(result.text);this._possiblyUpdateShaders(true);this._idleTimout=config.idleTimout;return true}catch(exception){this._possiblyUpdateShaders(false);qrCodeErrorCallback(`QR code parse error, error = ${exception}`);return false}};const foreverScan=()=>{if(!$this._shouldScan){return}if($this._localMediaStream){const videoElement=$this._videoElement;const widthRatio=videoElement.videoWidth/videoElement.clientWidth;const heightRatio=videoElement.videoHeight/videoElement.clientHeight;const sWidthOffset=$this._qrRegion.width*widthRatio;const sHeightOffset=$this._qrRegion.height*heightRatio;const sxOffset=$this._qrRegion.x*widthRatio;const syOffset=$this._qrRegion.y*heightRatio;$this._context.drawImage($this._videoElement,sxOffset,syOffset,sWidthOffset,sHeightOffset,0,0,$this._qrRegion.width,$this._qrRegion.height);if(!scanContext()&&config.disableFlip!==true){this._context.translate(this._context.canvas.width,0);this._context.scale(-1,1);scanContext()}}$this._foreverScanTimeout=setTimeout(foreverScan,Math.max(Html5Qrcode._getTimeoutFps(config.fps),this._idleTimout));this._idleTimout=0};const onMediaStreamReceived=mediaStream=>{return new Promise((resolve,reject)=>{const setupVideo=()=>{const videoElement=this._createVideoElement(width);$this._element.append(videoElement);videoElement.onabort=reject;videoElement.onerror=reject;videoElement.onplaying=()=>{const videoWidth=videoElement.clientWidth;const videoHeight=videoElement.clientHeight;setupUi(videoWidth,videoHeight);foreverScan();resolve()};videoElement.srcObject=mediaStream;videoElement.play();$this._videoElement=videoElement};$this._localMediaStream=mediaStream;if(videoConstraintsEnabled||!config.aspectRatio){setupVideo()}else{const constraints={aspectRatio:config.aspectRatio};const track=mediaStream.getVideoTracks()[0];track.applyConstraints(constraints).then(_=>setupVideo()).catch(error=>{console.log("[Warning] [Html5Qrcode] Constriants could not "+"be satisfied, ignoring constraints",error);setupVideo()})}})};return new Promise((resolve,reject)=>{if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){const videoConstraints=videoConstraintsEnabled?config.videoConstraints:$this._createVideoConstraints(cameraIdOrConfig);navigator.mediaDevices.getUserMedia({audio:false,video:videoConstraints}).then(stream=>{onMediaStreamReceived(stream).then(_=>{$this._isScanning=true;resolve()}).catch(reject)}).catch(err=>{reject(`Error getting userMedia, error = ${err}`)})}else if(navigator.getUserMedia){if(typeof cameraIdOrConfig!="string"){throw"The device doesn't support navigator.mediaDevices"+", only supported cameraIdOrConfig in this case is"+" deviceId parameter (string)."}const getCameraConfig={video:{optional:[{sourceId:cameraIdOrConfig}]}};navigator.getUserMedia(getCameraConfig,stream=>{onMediaStreamReceived(stream).then(_=>{$this._isScanning=true;resolve()}).catch(reject)},err=>{reject(`Error getting userMedia, error = ${err}`)})}else{reject("Web camera streaming not supported by the browser.")}})}stop(){this._shouldScan=false;clearTimeout(this._foreverScanTimeout);const $this=this;return new Promise((resolve,reject)=>{const tracksToClose=$this._localMediaStream.getVideoTracks().length;var tracksClosed=0;const removeQrRegion=()=>{while($this._element.getElementsByClassName(Html5Qrcode.SHADED_REGION_CLASSNAME).length){const shadedChild=$this._element.getElementsByClassName(Html5Qrcode.SHADED_REGION_CLASSNAME)[0];$this._element.removeChild(shadedChild)}};const onAllTracksClosed=()=>{$this._localMediaStream=null;$this._element.removeChild($this._videoElement);$this._element.removeChild($this._canvasElement);removeQrRegion();$this._isScanning=false;if($this._qrRegion){$this._qrRegion=null}if($this._context){$this._context=null}resolve(true)};$this._localMediaStream.getVideoTracks().forEach(videoTrack=>{$this._localMediaStream.removeTrack(videoTrack);videoTrack.stop();++tracksClosed;if(tracksClosed>=tracksToClose){onAllTracksClosed()}})})}scanFile(imageFile,showImage){const $this=this;if(!imageFile||!(imageFile instanceof File)){throw"imageFile argument is mandatory and should be instance "+"of File. Use 'event.target.files[0]'"}showImage=showImage===undefined?true:showImage;if($this._isScanning){throw"Close ongoing scan before scanning a file."}const computeCanvasDrawConfig=(imageWidth,imageHeight,containerWidth,containerHeight)=>{if(imageWidth<=containerWidth&&imageHeight<=containerHeight){const xoffset=(containerWidth-imageWidth)/2;const yoffset=(containerHeight-imageHeight)/2;return{x:xoffset,y:yoffset,width:imageWidth,height:imageHeight}}else{const formerImageWidth=imageWidth;const formerImageHeight=imageHeight;if(imageWidth>containerWidth){imageHeight=containerWidth/imageWidth*imageHeight;imageWidth=containerWidth}if(imageHeight>containerHeight){imageWidth=containerHeight/imageHeight*imageWidth;imageHeight=containerHeight}Html5Qrcode._log("Image downsampled from "+`${formerImageWidth}X${formerImageHeight}`+` to ${imageWidth}X${imageHeight}.`);return computeCanvasDrawConfig(imageWidth,imageHeight,containerWidth,containerHeight)}};return new Promise((resolve,reject)=>{$this._possiblyCloseLastScanImageFile();$this._clearElement();$this._lastScanImageFile=imageFile;const inputImage=new Image;inputImage.onload=()=>{const imageWidth=inputImage.width;const imageHeight=inputImage.height;const element=document.getElementById($this._elementId);const containerWidth=element.clientWidth?element.clientWidth:Html5Qrcode.DEFAULT_WIDTH;const containerHeight=Math.max(element.clientHeight?element.clientHeight:imageHeight,Html5Qrcode.FILE_SCAN_MIN_HEIGHT);const config=computeCanvasDrawConfig(imageWidth,imageHeight,containerWidth,containerHeight);if(showImage){const visibleCanvas=$this._createCanvasElement(containerWidth,containerHeight,"qr-canvas-visible");visibleCanvas.style.display="inline-block";element.appendChild(visibleCanvas);const context=visibleCanvas.getContext("2d");context.canvas.width=containerWidth;context.canvas.height=containerHeight;context.drawImage(inputImage,0,0,imageWidth,imageHeight,config.x,config.y,config.width,config.height)}const hiddenCanvas=$this._createCanvasElement(config.width,config.height);element.appendChild(hiddenCanvas);const context=hiddenCanvas.getContext("2d");context.canvas.width=config.width;context.canvas.height=config.height;context.drawImage(inputImage,0,0,imageWidth,imageHeight,0,0,config.width,config.height);try{const luminanceSource=new ZXing.HTMLCanvasElementLuminanceSource(hiddenCanvas);const binaryBitmap=new ZXing.BinaryBitmap(new ZXing.HybridBinarizer(luminanceSource));let result=$this.qrcode.decode(binaryBitmap);resolve(result.text)}catch(exception){reject(`QR code parse error, error = ${exception}`)}};inputImage.onerror=reject;inputImage.onabort=reject;inputImage.onstalled=reject;inputImage.onsuspend=reject;inputImage.src=URL.createObjectURL(imageFile)})}clear(){this._clearElement()}static getCameras(){return new Promise((resolve,reject)=>{if(navigator.mediaDevices&&navigator.mediaDevices.enumerateDevices&&navigator.mediaDevices.getUserMedia){this._log("navigator.mediaDevices used");navigator.mediaDevices.getUserMedia({audio:false,video:true}).then(stream=>{stream.oninactive=_=>this._log("All streams closed");const closeActiveStreams=stream=>{const tracks=stream.getVideoTracks();for(var i=0;i<tracks.length;i++){const track=tracks[i];track.enabled=false;track.stop();stream.removeTrack(track)}};navigator.mediaDevices.enumerateDevices().then(devices=>{const results=[];for(var i=0;i<devices.length;i++){const device=devices[i];if(device.kind=="videoinput"){results.push({id:device.deviceId,label:device.label})}}this._log(`${results.length} results found`);closeActiveStreams(stream);resolve(results)}).catch(err=>{reject(`${err.name} : ${err.message}`)})}).catch(err=>{reject(`${err.name} : ${err.message}`)})}else if(MediaStreamTrack&&MediaStreamTrack.getSources){this._log("MediaStreamTrack.getSources used");const callback=sourceInfos=>{const results=[];for(var i=0;i!==sourceInfos.length;++i){const sourceInfo=sourceInfos[i];if(sourceInfo.kind==="video"){results.push({id:sourceInfo.id,label:sourceInfo.label})}}this._log(`${results.length} results found`);resolve(results)};MediaStreamTrack.getSources(callback)}else{this._log("unable to query supported devices.");reject("unable to query supported devices.")}})}getRunningTrackCapabilities(){if(this._localMediaStream==null){throw"Scanning is not in running state, call this API only when"+" QR code scanning using camera is in running state."}if(this._localMediaStream.getVideoTracks().length==0){throw"No video tracks found"}const videoTrack=this._localMediaStream.getVideoTracks()[0];return videoTrack.getCapabilities()}applyVideoConstraints(videoConstaints){if(!videoConstaints){throw"videoConstaints is required argument."}else if(!this._isMediaStreamConstraintsValid(videoConstaints)){throw"invalid videoConstaints passed, check logs for more details"}if(this._localMediaStream==null){throw"Scanning is not in running state, call this API only when"+" QR code scanning using camera is in running state."}if(this._localMediaStream.getVideoTracks().length==0){throw"No video tracks found"}return new Promise((resolve,reject)=>{if("aspectRatio"in videoConstaints){reject("Chaning 'aspectRatio' in run-time is not yet "+"supported.");return}const videoTrack=this._localMediaStream.getVideoTracks()[0];videoTrack.applyConstraints(videoConstaints).then(_=>{resolve(_)}).catch(error=>{reject(error)})})}_clearElement(){if(this._isScanning){throw"Cannot clear while scan is ongoing, close it first."}const element=document.getElementById(this._elementId);element.innerHTML=""}_createCanvasElement(width,height,customId){const canvasWidth=width;const canvasHeight=height;const canvasElement=document.createElement("canvas");canvasElement.style.width=`${canvasWidth}px`;canvasElement.style.height=`${canvasHeight}px`;canvasElement.style.display="none";canvasElement.id=customId==undefined?"qr-canvas":customId;return canvasElement}_createVideoElement(width){const videoElement=document.createElement("video");videoElement.style.width=`${width}px`;videoElement.muted=true;videoElement.playsInline=true;return videoElement}_getShadedRegionBounds(width,height,qrboxWidth,qrboxHeight){if(qrboxWidth>width||qrboxHeight>height){throw"'config.qrbox' should not be greater than the "+"width and height of the HTML element."}return{x:(width-qrboxWidth)/2,y:(height-qrboxHeight)/2,width:qrboxWidth,height:qrboxHeight}}_possiblyInsertShadingElement(element,width,height,qrboxWidth,qrboxHeight){if(width-qrboxWidth<1||height-qrboxHeight<1){return}const shadingElement=document.createElement("div");shadingElement.style.position="absolute";shadingElement.style.borderLeft=`${(width-qrboxWidth)/2}px solid  #0000007a`;shadingElement.style.borderRight=`${(width-qrboxWidth)/2}px solid #0000007a`;shadingElement.style.borderTop=`${(height-qrboxHeight)/2}px solid #0000007a`;shadingElement.style.borderBottom=`${(height-qrboxHeight-10)/2}px solid #0000007a`;shadingElement.style.boxSizing="border-box";shadingElement.style.top="0px";shadingElement.style.bottom="0px";shadingElement.style.left="0px";shadingElement.style.right="0px";shadingElement.id=`${Html5Qrcode.SHADED_REGION_CLASSNAME}`;if(width-qrboxWidth<11||height-qrboxHeight<11){this.hasBorderShaders=false}else{const smallSize=5;const largeSize=40;this._insertShaderBorders(shadingElement,largeSize,smallSize,-smallSize,0,true);this._insertShaderBorders(shadingElement,largeSize,smallSize,-smallSize,0,false);this._insertShaderBorders(shadingElement,largeSize,smallSize,qrboxHeight+smallSize,0,true);this._insertShaderBorders(shadingElement,largeSize,smallSize,qrboxHeight+smallSize,0,false);this._insertShaderBorders(shadingElement,smallSize,largeSize+smallSize,-smallSize,-smallSize,true);this._insertShaderBorders(shadingElement,smallSize,largeSize+smallSize,qrboxHeight+smallSize-largeSize,-smallSize,true);this._insertShaderBorders(shadingElement,smallSize,largeSize+smallSize,-smallSize,-smallSize,false);this._insertShaderBorders(shadingElement,smallSize,largeSize+smallSize,qrboxHeight+smallSize-largeSize,-smallSize,false);this.hasBorderShaders=true}element.append(shadingElement)}_insertShaderBorders(shaderElem,width,height,top,side,isLeft){const elem=document.createElement("div");elem.style.position="absolute";elem.style.backgroundColor=Html5Qrcode.BORDER_SHADER_DEFAULT_COLOR;elem.style.width=`${width}px`;elem.style.height=`${height}px`;elem.style.top=`${top}px`;if(isLeft){elem.style.left=`${side}px`}else{elem.style.right=`${side}px`}if(!this.borderShaders){this.borderShaders=[]}this.borderShaders.push(elem);shaderElem.appendChild(elem)}_possiblyUpdateShaders(qrMatch){if(this.qrMatch===qrMatch){return}if(this.hasBorderShaders&&this.borderShaders&&this.borderShaders.length){this.borderShaders.forEach(shader=>{shader.style.backgroundColor=qrMatch?Html5Qrcode.BORDER_SHADER_MATCH_COLOR:Html5Qrcode.BORDER_SHADER_DEFAULT_COLOR})}this.qrMatch=qrMatch}_possiblyCloseLastScanImageFile(){if(this._lastScanImageFile){URL.revokeObjectURL(this._lastScanImageFile);this._lastScanImageFile=null}}_createVideoConstraints(cameraIdOrConfig){if(typeof cameraIdOrConfig=="string"){return{deviceId:{exact:cameraIdOrConfig}}}else if(typeof cameraIdOrConfig=="object"){const facingModeKey="facingMode";const deviceIdKey="deviceId";const allowedFacingModeValues={user:true,environment:true};const exactKey="exact";const isValidFacingModeValue=value=>{if(value in allowedFacingModeValues){return true}else{throw"config has invalid 'facingMode' value = "+`'${value}'`}};const keys=Object.keys(cameraIdOrConfig);if(keys.length!=1){throw"'cameraIdOrConfig' object should have exactly 1 key,"+` if passed as an object, found ${keys.length} keys`}const key=Object.keys(cameraIdOrConfig)[0];if(key!=facingModeKey&&key!=deviceIdKey){throw`Only '${facingModeKey}' and '${deviceIdKey}' `+" are supported for 'cameraIdOrConfig'"}if(key==facingModeKey){const facingMode=cameraIdOrConfig[key];if(typeof facingMode=="string"){if(isValidFacingModeValue(facingMode)){return{facingMode:facingMode}}}else if(typeof facingMode=="object"){if(exactKey in facingMode){if(isValidFacingModeValue(facingMode[exactKey])){return{facingMode:{exact:facingMode[exactKey]}}}}else{throw"'facingMode' should be string or object with"+` ${exactKey} as key.`}}else{const type=typeof facingMode;throw`Invalid type of 'facingMode' = ${type}`}}else{const deviceId=cameraIdOrConfig[key];if(typeof deviceId=="string"){return{deviceId:deviceId}}else if(typeof deviceId=="object"){if(exactKey in deviceId){return{deviceId:{exact:deviceId[exactKey]}}}else{throw"'deviceId' should be string or object with"+` ${exactKey} as key.`}}else{const type=typeof deviceId;throw`Invalid type of 'deviceId' = ${type}`}}}else{const type=typeof cameraIdOrConfig;throw`Invalid type of 'cameraIdOrConfig' = ${type}`}}_isMediaStreamConstraintsValid(videoConstraints){if(!videoConstraints){Html5Qrcode._logError("Empty videoConstraints",true);return false}if(typeof videoConstraints!=="object"){const typeofVideoConstraints=typeof videoConstraints;Html5Qrcode._logError("videoConstraints should be of type object, the "+`object passed is of type ${typeofVideoConstraints}.`,true);return false}const bannedKeys=["autoGainControl","channelCount","echoCancellation","latency","noiseSuppression","sampleRate","sampleSize","volume"];const bannedkeysSet=new Set(bannedKeys);const keysInVideoConstraints=Object.keys(videoConstraints);for(let i=0;i<keysInVideoConstraints.length;i++){const key=keysInVideoConstraints[i];if(bannedkeysSet.has(key)){Html5Qrcode._logError(`${key} is not supported videoConstaints.`,true);return false}}return true}static _getTimeoutFps(fps){return 1e3/fps}static _log(message){if(Html5Qrcode.VERBOSE){console.log(message)}}static _logError(message,experimental){if(Html5Qrcode.VERBOSE||experimental===true){console.error(message)}}}